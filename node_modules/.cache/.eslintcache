[{"/Users/anthonymac/Documents/code_projects/jed_nerds/src/index.js":"1","/Users/anthonymac/Documents/code_projects/jed_nerds/src/reportWebVitals.js":"2","/Users/anthonymac/Documents/code_projects/jed_nerds/src/App.js":"3","/Users/anthonymac/Documents/code_projects/jed_nerds/src/components/body/AppGrid/AppGrid.js":"4","/Users/anthonymac/Documents/code_projects/jed_nerds/src/appData/Applications.js":"5","/Users/anthonymac/Documents/code_projects/jed_nerds/src/components/header/Header.js":"6","/Users/anthonymac/Documents/code_projects/jed_nerds/src/components/body/Body.js":"7","/Users/anthonymac/Documents/code_projects/jed_nerds/src/components/body/SearchBar/SearchBar.js":"8"},{"size":535,"mtime":1653955054663,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1653603952228,"results":"11","hashOfConfig":"10"},{"size":891,"mtime":1653955732403,"results":"12","hashOfConfig":"10"},{"size":3439,"mtime":1653955342538,"results":"13","hashOfConfig":"10"},{"size":6465,"mtime":1653952519988,"results":"14","hashOfConfig":"10"},{"size":2940,"mtime":1653624319950,"results":"15","hashOfConfig":"10"},{"size":438,"mtime":1653955739122,"results":"16","hashOfConfig":"10"},{"size":1097,"mtime":1653953944974,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"9ztgr2",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"21"},"/Users/anthonymac/Documents/code_projects/jed_nerds/src/index.js",[],[],[],"/Users/anthonymac/Documents/code_projects/jed_nerds/src/reportWebVitals.js",[],[],"/Users/anthonymac/Documents/code_projects/jed_nerds/src/App.js",["46"],[],"import './App.css';\nimport AppGrid from './components/body/AppGrid/AppGrid.js'\nimport { ThemeProvider } from '@emotion/react';\nimport { createTheme } from '@mui/material';\nimport { useState } from 'react';\nimport Header from './components/header/Header';\nimport Body from './components/body/Body';\n\nfunction App() {\n  const [themeMode, setThemeMode] = useState('dark')\n  const theme = createTheme({palette: {\n    mode: themeMode\n    }\n  });\n  return (\n    // <div style={{height:'125%', backgroundColor:themeMode === 'dark' ? '#232324' : '#f0f0f2'}}>\n    <ThemeProvider theme={theme} >\n    <div style={{width:'100%', height:'100%', backgroundColor:themeMode === 'dark' ? '#232324' : '#f0f0f2'}}>\n      <Header text = {'JedNerds'} mode={themeMode} setThemeMode={setThemeMode}/>\n      <Body theme={themeMode} />\n      \n    </div>\n    </ThemeProvider>\n    // </div>\n  );\n}\n\nexport default App;\n","/Users/anthonymac/Documents/code_projects/jed_nerds/src/components/body/AppGrid/AppGrid.js",["47"],[],"/Users/anthonymac/Documents/code_projects/jed_nerds/src/appData/Applications.js",[],[],"/Users/anthonymac/Documents/code_projects/jed_nerds/src/components/header/Header.js",[],[],[],"/Users/anthonymac/Documents/code_projects/jed_nerds/src/components/body/Body.js",[],[],"/Users/anthonymac/Documents/code_projects/jed_nerds/src/components/body/SearchBar/SearchBar.js",["48"],[],"import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\n\nexport default function SearchBar(props) {\n  \n    const handleSearchChange = (value) => {\n        props.setAppFilter(value);\n    }\n    return (\n    <div style={{display:'flex', justifyContent:'center', marginTop:'40px', width:'100%', textAlign:'center'}} >\n        <Paper\n        component=\"form\"\n        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 400 }}\n        >\n        {/* <IconButton sx={{ p: '10px' }} aria-label=\"menu\">\n            <MenuIcon />\n        </IconButton> */}\n            <InputBase\n                sx={{ ml: 1, flex: 1}}\n                placeholder=\"Search Available Apps\"\n                inputProps={{ 'aria-label': 'search available apps' }}\n                value={props.appFilter}\n                onChange={(e) => handleSearchChange(e.target.value)}\n            />\n            <SearchIcon />\n        </Paper>\n    </div>\n  );\n}\n",{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":50,"column":41,"nodeType":"55","endLine":50,"endColumn":92},{"ruleId":"49","severity":1,"message":"56","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":16},"no-unused-vars","'AppGrid' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MenuIcon' is defined but never used."]